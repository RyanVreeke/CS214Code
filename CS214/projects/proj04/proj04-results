Script started on 2020-03-04 21:04:38-0500
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ cat script.java sc ript.ada script.clojure script.ruby > proj04-results
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ [Ka2ps proj04-result s
[proj04-results (plain): 5 pages on 3 sheets]
request id is Calvin_uniFLOW-47 (0 file(s))
[Total: 5 pages on 3 sheets] sent to the default printer
[68 lines wrapped]
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ [Kexit
uble();

      System.out.println("The factorial of " + n + " is " + factorial(n));
  }

  static double factorial(double n) {
    double answer = 1.0;

    for (int i = 2; i <= n; i++) {
      answer *= i;
    }

    return answer;
  }
}



]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ [Kjavac -deprecation  Factorial.java
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ [Kjava Factorial
To compute n!, enter n: 
0
The factorial of 0.0 is 1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ java Factorial
To compute n!, enter n: 
1
The factorial of 1.0 is 1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ java Factorial
To compute n!, enter n: 
2
The factorial of 2.0 is 2.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ java Factorial
To compute n!, enter n: 
3
The factorial of 3.0 is 6.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ java Factorial
To compute n!, enter n: 
4
The factorial of 4.0 is 24.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ java Factorial
To compute n!, enter n: 
5
The factorial of 5.0 is 120.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ exit

Script done on 2020-03-04 21:01:22-0500
Script started on 2020-03-04 21:01:32-0500
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ cat factorial.adb
-- factorial.adb calculates the factorial of the inputed number n..
--
-- Input: n a integer.
-- Precondition: n > 0.
-- Output: The factorial of n.
--
-- Begun by: Prof. Adams, for CS 214 at Calvin College.
-- Completed by: Ryan Vreeke
-- Date: March 04, 2020
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;

procedure factorial is

   N : Integer := 1;
   ANSWER : Integer := 1;
begin                                           -- Prompt for input
   Put("To compute n!, enter n: ");
   Get(N);

   -- Replace this line with a loop to calculate factorial n.
   for I in reverse 2..N loop
      ANSWER := ANSWER*(I);
   end loop;

   Put_Line("The factorial of ");
   Put(N);
   Put(" is ")
   Put(ANSWER);

end factorial;

]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ gnatmake factorial .adb
x86_64-linux-gnu-gcc-7 -c factorial.adb
factorial.adb:30:15: missing ";"
gnatmake: "factorial.adb" compilation error
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ [K./factorial
To compute n!, enter n: 0
The factorial of n is 
          1
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ./factorial
To compute n!, enter n: 1
The factorial of n is 
          1
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ./factorial
To compute n!, enter n: 2
The factorial of n is 
          2
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ./factorial
To compute n!, enter n: 3
The factorial of n is 
          6
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ./factorial
To compute n!, enter n: 4
The factorial of n is 
         24
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ./factorial
To compute n!, enter n: 5
The factorial of n is 
        120
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ exit

Script done on 2020-03-04 21:02:22-0500
Script started on 2020-03-04 21:03:12-0500
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ cat src/fa ctorial.clj
;;;; factorial.clj calculates the factorial of the inputed number n.
;;;;
;;;; Input: n a double.
;;;; Precondition: n > 0.
;;;; Output: The factorial of n.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: Ryan Vreeke
;;;; Date: March 04, 2020
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns factorial)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; factorialN() recursively generates the factorial of n.
;;; Receive: n a double.
;;; Precondition: n > 0.
;;; Output: The factorial of n.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; replace this line with the definition of factorialN().
(defn factorialN [n]
  (if (>= n 2) 
    (* n (factorialN (- n 1)))
    1.0))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the factorialN() function.
;;; Input: n.
;;; Output: The factorial of n.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (print "To compute n!, enter n: ") (flush)
 (let
    [ n (double (read))] 
    (println "The factorial of " n " is " (factorialN n))
 )
)

]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 0
The factorial of  0.0  is  1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 1
The factorial of  1.0  is  1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 2
The factorial of  2.0  is  2.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 3
The factorial of  3.0  is  6.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 4
The factorial of  4.0  is  24.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kclojure -m  factorial
To compute n!, enter n: 5
The factorial of  5.0  is  120.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04/clojure[00m$ [Kexit

Script done on 2020-03-04 21:03:57-0500
Script started on 2020-03-04 21:02:35-0500
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ cat factorial.rb
#! /usr/bin/ruby
# factorial.rb calculates the factorial of the inputed number n.
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: Ryan Vreeke
# Date: March 04, 2020
#
# Input: n a float.
# Precondition: n > 0.
# Output: The factorial of n.


if __FILE__ == $0
   print "To compute n!, enter n: "
#### ADD CODE HERE TO GET THESE VALUES AS NUMBERS
   n = gets.chomp.to_f
   
#  Replace this line with a for loop to calculate the factorial of n 
   answer = 1.0
   for i in 2..n
      answer = answer * i
   end
  
   puts("The factorial of #{n} is #{answer}")
end

]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 0
The factorial of 0.0 is 1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 1
The factorial of 1.0 is 1.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 2
The factorial of 2.0 is 2.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 3
The factorial of 3.0 is 6.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 4
The factorial of 4.0 is 24.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ ruby factorial.rb
To compute n!, enter n: 5
The factorial of 5.0 is 120.0
]0;rjv59@gold13: ~/Desktop/CS214/CS214Code/CS214/projects/proj04[01;32mrjv59@gold13[00m:[01;34m~/Desktop/CS214/CS214Code/CS214/projects/proj04[00m$ exit

Script done on 2020-03-04 21:03:02-0500
